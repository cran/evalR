// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_find_parenthesis
std::string rcpp_find_parenthesis(std::string const& text);
RcppExport SEXP _evalR_rcpp_find_parenthesis(SEXP textSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string const& >::type text(textSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_find_parenthesis(text));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_create_tree
Rcpp::List rcpp_create_tree(std::string text, std::vector<std::string> const& singular_operators, std::vector<std::string> const& binary_operators, std::vector<std::string> const& valid_functions);
RcppExport SEXP _evalR_rcpp_create_tree(SEXP textSEXP, SEXP singular_operatorsSEXP, SEXP binary_operatorsSEXP, SEXP valid_functionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type text(textSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> const& >::type singular_operators(singular_operatorsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> const& >::type binary_operators(binary_operatorsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> const& >::type valid_functions(valid_functionsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_create_tree(text, singular_operators, binary_operators, valid_functions));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_evalR_rcpp_find_parenthesis", (DL_FUNC) &_evalR_rcpp_find_parenthesis, 1},
    {"_evalR_rcpp_create_tree", (DL_FUNC) &_evalR_rcpp_create_tree, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_evalR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
